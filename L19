offsets = [0,3,5,7,9,11,15,17,33,35,39,45,47,53,57,59,63,75,77,83,87,89,95,99,105,113,117,119,125,129,143,147,153,155,165,173,179,183,189,195,197,209,215,243,249,255]

moduli :: [Integer]
moduli = map (2^64-) offsets

main = do
  (idx:_) <- getArgs
  let i = read idx :: Int
  mapM_ (print . (`mod` moduli!!i)) l18

(19,00) legal 8090796072333351655 diff ?
(20,00) legal 2287365897119014653 diff ?
0: L(19,19) mod 18446744073709551616 =  8090796072333351655
0: L(19,20) mod 18446744073709551616 =  2287365897119014653 


(19,00) legal 2915461546443917794 diff ?
(20,00) legal 4698800023495841455 diff ?
1: L(19,19) mod 18446744073709551613 = 2915461546443917794
1: L(19,20) mod 18446744073709551613 = 4698800023495841455

(19,00) legal 7586469474294957788 diff ?
(20,00) legal 8865503005021205839 diff ?
2: L(19,19) mod 18446744073709551611 = 7586469474294957788
2: L(19,20) mod 18446744073709551611 = 8865503005021205839

(19,00) legal 6473614947737753186 diff ?
(20,00) legal 3116947901067797772 diff ?
3: L(19,19) mod 18446744073709551609 = 6473614947737753186
3: L(19,20) mod 18446744073709551609 = 3116947901067797772


(19,00) legal 18086767044943672066 diff ?
(20,00) legal 2968400614168585055 diff ?
11: L(19,19) mod 18446744073709551571 = 18086767044943672066
11: L(19,20) mod 18446744073709551571 =  2968400614168585055

(19,00) legal 4954386835027564217 diff ?
(20,00) legal 7153804081329491329 diff ?
19: L(19,19) mod 18446744073709551533 =  4954386835027564217
19: L(19,20) mod 18446744073709551533 =  7153804081329491329

4: L(19,19) mod 18446744073709551607 =  10169697560205166237
4: L(19,20) mod 18446744073709551607 =   8557982167053608540

5: L(19,19) mod 18446744073709551605 =   8330618849129880355
5: L(19,20) mod 18446744073709551605 =  10206010943437347776

6: L(19,19) mod 18446744073709551601 =  15770133769769565723
6: L(19,20) mod 18446744073709551601 =   4187295581145607589
